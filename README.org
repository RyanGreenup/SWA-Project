#+TITLE: SWA-Project
#+HTML_HEAD_EXTRA: <link rel="stylesheet" type="text/css" href="./style.css">
#+OPTIONS: num:nil
#+TODO: TODO CODE REPORT DONE

#+BEGIN_HTML
<p> <img src="https://img.shields.io/badge/Chat-5%20Members-green" /> <img
src="https://img.shields.io/badge/Contributors-5%20Member-green" /> <img src="https://img.shields.io/badge/Questions-12%20Completed-orange" /> </p>
#+END_HTML
#+begin_comment
See [[https://shields.io/][Shields io]]
#+end_comment

Github for Social Web Analytics

+ [[https://ryangreenup.github.io/SWA-Project/][Home Page]]
+ [[https://ryangreenup.github.io/SWA-Project/][Docs / Gitpage]]
+ [[http://121.210.19.69/DSWiki/index.php/Main_Page][Wiki]]
+ [[https://discord.gg/QW5YNc][Discord]]
  + This expires every 24 hrs
  + =2020-04-25 Sat 08:56=
+ [[file:docs/ProjectSpec_S1_2020_WSUSCC_GizemModerated.pdf][Project Specification]]
 + [[./docs/rtweet.pdf][=rtweet= Manual]]
+ [[http://121.210.19.69/DSWiki/docs/swaprojectreadme.html][HTML Export (of this readme)]]

+ [[file:report/report.pdf][Current Report]]

* TODO Add Members as Collaborators
+ [X] Ryan
+ [X] Kieran
+ [X] Navid
+ [X] Hassan
+ [X] Ben

* DONE Documentation
** DONE Make a Wiki
+ Probably MediaWiki because github wiki doesn't deal with LaTeX
  + Wiki.JS is another option
*** DONE Configure Usernames for /Apache2/ Server
I'm going to have to adjust the =/etc/apache2/sites-enabled/000-default.conf= in
order to have the mediawiki publically accessible.
**** put config under version control
I will also need to put [[/etc/apache2/sites-enabled/000-default.conf][the Apache Config]] under version control using ~stow~.

** DONE Make a Gitpage
+ The gitpage will be almost the same as the wiki, but, if there are any issues
  configuring ~mkdocs~ and using ~mkdocs gh-deploy~ then just:

+ add information to the Wiki
+ Update the docs on /GitHub/
  + File an issue on /GitHub/ so somebody else can build the docs

* DONE Make a Discord Server
** DONE Make a WebHook for Github Issues
Follow [[https://gist.github.com/jagrosh/5b1761213e33fc5b54ec7f6379034a22][These Instructions here]]
It seems like it is necessary to append ~/github~ at the end of the /Payload
URL/ as documented [[https://support.discordapp.com/hc/en-us/articles/228383668][here]].

That link also suggested that the /Content type/ should be =application/json=.
** DONE Invite all Members
* DONE Share links on /Vuws/
Put the following links up on /Vuws/:
+ [X] Discord Server
+ [X] Github
+ [X] GitPage
+ [X] Wiki
* Correspondence
** Group Email
Hey guys,

+ I've made a /GitHub/ repo [[https://github.com/RyanGreenup/SWA-Project/blob/master/README.org][here]]
+ A corresponding /GitPage/ [[https://ryangreenup.github.io/SWA-Project/][here]]
  + It's being deployed from the =gh-pages= branch, built using =mkdocs= as
described [[https://ryangreenup.github.io/SWA-Project/documentation_methods.html][on the page]]
+ I also just put up a wiki on an /Apache Server/ [[http://121.210.19.69/DSWiki/index.php/Main_Page][here]] that can be used in
conjuction with the =gh-pages= branch.
  + /Github/ doesn't support /MathJax/ so unfourtunately the built in wiki isn't
    an option
  + Also I'm on cable so I can't get a static IP, hence if I have a power outage be
mindful that the link will change and I'll have to post up my new IP.
+ Finally I've made a discord server which you can access through [[https://discord.gg/NEYcDF][this invitation]]
  + I used a webhook so that /GitHub/ will post to that chat every time a push is
    made or an issue posted.
    + Remember you can commit without pushing so this shouldn't be too annoying.

I'll add everybody as Collaborators tomorrow, but /GitHub/ just went down for
maintenance so I'll have to do it later

Also there is a post on the discussion board dated =2019-09-17=, just disregard
that. I'll download the tweets tomorrow and push them to /GitHub/ so we can all
get started, I haven't decided on the company to use but it doesn't really matter.
* TODO Working
** Clock Tables
*** Ryan
#+BEGIN: clocktable :scope nil :maxlevel 6 :match "ryan"
#+CAPTION: Clock summary at [2020-05-04 Mon 16:35]
| Headline                                       | Time       |         |       |
|------------------------------------------------+------------+---------+-------|
| *Total time*                                   | *1d 21:22* |         |       |
|------------------------------------------------+------------+---------+-------|
| Working                                        | 1d 21:22   |         |       |
| \_  8.1 Analysing friend and follower count    |            | 1d 1:19 |       |
| \_    1 Pull Tweets                            |            |         |  2:53 |
| \_    2 Extract the Friend and Follower Count  |            |         |  1:12 |
| \_    3 Find the Average Followers             |            |         |  0:07 |
| \_    5 Bootstrap a confidence interval        |            |         |  9:27 |
| \_    6 Who has a higher friend count given... |            |         |  2:25 |
| \_    7 Test for Independence                  |            |         |  9:15 |
| \_  8.2 Finding Themes                         |            |   20:03 |       |
| \_    8 Find unique users with above...        |            |         |  1:05 |
| \_    9 Find Unique users who have $\leq$...   |            |         |  0:05 |
| \_    10 Combine tweets of users identified... |            |         |  0:57 |
| \_    12 Display the first two tweets          |            |         |  1:10 |
| \_    Create a TDM, use TFIDF, how many...     |            |         |  3:43 |
| \_    14 Cluster the Results with respect...   |            |         | 12:16 |
| \_    15 Count the Number of Clusters          |            |         |  0:47 |
#+END:
*** Navid
#+BEGIN: clocktable :scope nil :maxlevel 6 :match "navid"
#+CAPTION: Clock summary at [2020-04-29 Wed 12:25]
| Headline     | Time   |
|--------------+--------|
| *Total time* | *0:00* |
#+END:

*** Hassan
#+BEGIN: clocktable :scope nil :maxlevel 6 :match "hassan"
#+CAPTION: Clock summary at [2020-04-29 Wed 12:25]
| Headline     | Time   |
|--------------+--------|
| *Total time* | *0:00* |
#+END:
*** Kieran
#+BEGIN: clocktable :scope nil :maxlevel 6 :match "kieran"
#+CAPTION: Clock summary at [2020-04-29 Wed 12:26]
| Headline     | Time   |
|--------------+--------|
| *Total time* | *0:00* |
#+END:
*** Ben
#+BEGIN: clocktable :scope subtree :maxlevel 6 :match "ben"
#+CAPTION: Ben's Clock summary at [2020-04-29 Wed 08:29]
| Headline     | Time   |
|--------------+--------|
| *Total time* | *0:00* |
#+END:

** DONE 8.1 Analysing friend and follower count
I like [[http://juanreyero.com/article/emacs/org-teams.html][this post]] on managing the work so let's use that.
*** DONE 1 Pull Tweets                                                        :ryan:
:LOGBOOK:
CLOCK: [2020-04-26 Sun 12:37]--[2020-04-26 Sun 15:30] =>  2:53
:END:
+This was easy, I chose /[[https://twitter.com/SquareEnix?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor][SquareEnix]]/ because I'm looking forward to /FFVII/ when
we finish this project :beers:+

Nope, it was all japanese, but /Ubisoft/ is uniqe word that will be really easy
to search for (/Bunnings/ would be good to, /Valve/ would be awful) I've just
stored my tokens here for reference as well.
**** Tokens
-----BEGIN PGP MESSAGE-----

jA0ECQMClqDOdZ22OWj/0ukBP+GobsGEIuYwIjk7+9c6MSFzpNx2beXfBWPtvN4s
1XFim8Mvi2imEeQznCDCo5hLKe4FouPMHsU2Y+Rp0q54NHCbWR8iYalqohmc52rY
VPnzSVcFtH5y7juOcFirOmZ5BPGizEFx/OIQNECmsyA5P3e5cGt7+kezvunSGKL1
CuwgstsiSZCIjysou1cSoP0/Fx308gox287ZvYlHHA9L+54RlypCNDRtYMRc1ln6
Xh0CGbW01vt1LmA++n8l/zafqeu5iHCRWSEmlrJdXf0Dj2iCbTvtt0gWCO9eAOyu
N248+q7pRMDl0DOx9xOZL+ZaeS5hBSaKpyL3E8abtqZ8D/IcI6cUpRhVp3Qo4p49
dxli/Je1ulhXPYLeg1S8rKC9mm6QyU8dtwMl5LhL0s5gHqWemwdmsqojGFCZhj5t
rm2ZnD9uwrYSrDXE5BztvYayvRO6JU96LphDdnNXV2vJjLVh0+uUqAJWXm0poi6i
msB92v8Y+zEktXHtEWUYtrzHw/8Jg5Ddjv4YeRyPbCQb5YGZmd7tdmDbqYUCH0WI
V7RtOHEo7rF/cPlf6QZzoLBmpsR4CCQPOhl0rWG7sK3QjHT7g2iYxv9fj+0pB6+E
a73kebYTxh3D0S/g6nvZ08iBdTo+a7kMn1g6kd29AkpDD+PB+4Vu9NJESzCrcaDZ
WwEP
=8/Cr
-----END PGP MESSAGE-----

*** DONE 2 Extract the Friend and Follower Count                              :ryan:
:LOGBOOK:
CLOCK: [2020-04-26 Sun 15:40]--[2020-04-26 Sun 16:52] =>  1:12
:END:
Just use the ~duplicated~ function as an index as [[file:scripts/811.R::Friend and Follower Count ----------------------------------------------------][shown here]]
*** DONE 3 Find the Average Followers                                         :ryan:
:LOGBOOK:
CLOCK: [2020-04-26 Sun 16:55]--[2020-04-26 Sun 17:02] =>  0:07
:END:
Just used the [[file:scripts/811.R::Calculate Summary Stats][mean function as  shown here]]
*** DONE 4 Find the proprtion above average
:PROPERTIES:
:ID:       92416748-f58a-4799-9f97-d08c3ee83840
:END:
:LOGBOOK:
CLOCK: [2020-04-26 Sun 17:02]--[2020-04-26 Sun 17:20] =>  0:18
:END:
[[file:scripts/811.R::8.1.4 Above Average Followers ------------------------------------------------][link]]



Use ~mean(vec<val)~

*** DONE 5 Bootstrap a confidence interval                                    :ryan:ATTACH:
:PROPERTIES:
:ID:       93891e71-ef7c-4c20-a814-d3b44de9e5e3
:END:
:LOGBOOK:
CLOCK: [2020-04-27 Mon 14:17]--[2020-04-27 Mon 16:14] =>  1:57
CLOCK: [2020-04-27 Mon 07:51]--[2020-04-27 Mon 13:28] =>  5:37
CLOCK: [2020-04-26 Sun 19:27]--[2020-04-26 Sun 21:09] =>  1:42
CLOCK: [2020-04-26 Sun 17:22]--[2020-04-26 Sun 17:33] =>  0:11
:END:

This method was provided in the lecture notes, I also did some extra research for better marks:

#+NAME: squished
#+CAPTION: Lossless Compression of a Network graph
#+attr_html: :width 400px
#+attr_latex: :width 7cm
 [[./docs/media/slidesboot.png]]

*** DONE 6 Who has a higher friend count given the confidence Interval        :ryan:
:LOGBOOK:
CLOCK: [2020-04-27 Mon 19:17]--[2020-04-27 Mon 21:20] =>  2:03
CLOCK: [2020-04-27 Mon 16:31]--[2020-04-27 Mon 16:53] =>  0:22
:END:
Same as [[*5 Bootstrap a confidence interval][above]] pretty much, but you'll notice I attached some notes justifying my description of the confidence interval [[./docs/ConfIntNotes.pdf][here]].

+ [[file:scripts/811.R::8.1.6 High Friend Count Proportion -------------------------------------------][Link to Code]]

*** DONE 7 Test for Independence                                              :ryan:
:LOGBOOK:
CLOCK: [2020-04-28 Tue 17:56]--[2020-04-28 Tue 20:27] =>  2:31
CLOCK: [2020-04-28 Tue 15:44]--[2020-04-28 Tue 17:29] =>  1:45
CLOCK: [2020-04-28 Tue 12:31]--[2020-04-28 Tue 15:13] =>  2:42
CLOCK: [2020-04-28 Tue 07:30]--[2020-04-28 Tue 08:30] =>  1:00
CLOCK: [2020-04-27 Mon 21:22]--[2020-04-27 Mon 22:39] =>  1:17
:END:

Originally I tried the following as described in issue =#3=
#+begin_src R
tens     <- y[0    <= y & y < 100]
hundreds <- y[100  <= y & y < 1000]
oneK     <- y[1000 <= y & y < 1000]
twoK     <- y[2000 <= y & y < 1000]
threeK   <- y[3000 <= y & y < 1000]
fourK    <- y[4000 <= y & y < 1000]
fiveKp   <- y[5000 <= y & y < Inf]
#+end_src

but I didn't like that and changed it to this:

#+begin_src R
## Assign Categories
y_df <- data.frame(y)
y_df$cat[0       <= y_df$y & y_df$y < 100] <- "Tens"
y_df$cat[100     <= y_df$y & y_df$y < 1000] <- "Hundreds"
y_df$cat[1000    <= y_df$y & y_df$y < 2000] <- "1Thousands"
y_df$cat[2000    <= y_df$y & y_df$y < 3000] <- "2Thousands"
y_df$cat[3000    <= y_df$y & y_df$y < 4000] <- "3Thousands"
y_df$cat[4000    <= y_df$y & y_df$y < 5000] <- "4Thousands"
y_df$cat[5000    <= y_df$y & y_df$y < Inf] <- "5ThousandOrMore"

### Make a factor
y_df$cat <- factor(y_df$cat, ordered = FALSE)

### Determine Frequencies
y_freq <- table(y_df$cat) %>% as.matrix()
#+end_src

**** DONE Use Bootstrap Method
Alright I fiagured this out, you simply can't use a multinomial distribution I don't think, or if you can it should be the observed proportions not the expected, because, the proportions will be independent by the nature that they are simply random.

hence you're seeing how many times you see a false positive for independent data by mere chance.
** TODO 8.2 Finding Themes
*** 8 Find unique users with above average friend counts                      :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 13:10]--[2020-05-04 Mon 13:15] =>  0:05
CLOCK: [2020-04-29 Wed 08:23]--[2020-04-29 Wed 9:23] =>  1:00
:END:
*** DONE 9 Find Unique users who have $\leq$ average friend counts            :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 13:15]--[2020-05-04 Mon 13:16] =>  0:00
CLOCK: [2020-04-29 Wed 10:21]--[2020-04-29 Wed 10:25] =>  0:04
:END:
*** DONE 10 Combine tweets of users identified in 8/9                         :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 13:16]--[2020-05-04 Mon 13:39] =>  0:23
CLOCK: [2020-04-29 Wed 10:26]--[2020-04-29 Wed 11:00] =>  0:34
:END:
*** DONE 11 Clean and pre-process the tweet text data
:LOGBOOK:
CLOCK: [2020-05-04 Mon 13:39]--[2020-05-04 Mon 14:07] =>  0:28
CLOCK: [2020-04-29 Wed 11:00]--[2020-04-29 Wed 12:24] =>  1:24
:END:

*** DONE 12 Display the first two tweets                                      :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 14:07]--[2020-05-04 Mon 14:41] =>  0:34
CLOCK: [2020-04-29 Wed 12:26]--[2020-04-29 Wed 13:02] =>  0:36
:END:
*** DONE Create a TDM, use TFIDF, how many tweets were empty?                 :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 15:41]--[2020-05-04 Mon 15:49] =>  0:08
CLOCK: [2020-05-04 Mon 14:41]--[2020-05-04 Mon 15:22] =>  0:41
CLOCK: [2020-04-29 Wed 16:00]--[2020-04-29 Wed 16:25] =>  0:25
CLOCK: [2020-04-29 Wed 15:15]--[2020-04-29 Wed 15:34] =>  0:19
CLOCK: [2020-04-29 Wed 13:04]--[2020-04-29 Wed 15:14] =>  2:10
:END:

So this is how he did it [[file:~/Dropbox/Notes/DataSci/Social_Web_Analytics/05_Solutions.R::remove empty tweets][here]]:

#+begin_src R
# remove empty tweets
# if a tweet contains all stop words, then after preprocessing, it will be empty
# We remove these from the tweet set so they don't effect the calculations (an
# empty tweet is represented as a vector with all zeros, the Cosine with this
# vector does not make sense.)
tdm
dim(tdm)
empties = which(colSums(as.matrix(tdm)) == 0)
empties
length(empties)

if(length(empties)!=0){
  tdm = tdm[,-empties]
}
#+end_src

The only issue is that I'm getting no empties in mine.

I think this is fine though.
*** DONE 14 Cluster the Results with respect to cosine distance               :ryan:
:LOGBOOK:
CLOCK: [2020-04-30 Thu 15:06]--[2020-04-30 Thu 16:07] =>  1:01
CLOCK: [2020-04-30 Thu 09:20]--[2020-04-30 Thu 14:06] =>  4:46
CLOCK: [2020-04-30 Thu 06:25]--[2020-04-30 Thu 08:50] =>  2:25
CLOCK: [2020-04-29 Wed 18:08]--[2020-04-29 Wed 22:08] =>  4:00
CLOCK: [2020-04-29 Wed 16:23]--[2020-04-29 Wed 16:27] =>  0:04
:END:
I need to review clustering before I start this, but the elbow method is discussed [[pdf:~/Dropbox/Studies/2020Autumn/Social_Web_Analytics/06_Slides_TM2_Clustering.pdf::42++0.00??elbow][here]]

*** DONE 15 Count the Number of Clusters                                      :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 15:49]--[2020-05-04 Mon 15:56] =>  0:07
CLOCK: [2020-04-30 Thu 16:22]--[2020-04-30 Thu 17:02] =>  0:40
:END:

*This was easy, I just used =table(K)=

*** DONE 16 Visualise in 2 Dimensions
:LOGBOOK:
CLOCK: [2020-05-04 Mon 15:56]--[2020-05-04 Mon 16:34] =>  0:00
CLOCK: [2020-05-04 Mon 09:28]--[2020-05-04 Mon 12:07] =>  2:39
CLOCK: [2020-05-02 Sun 09:00]--[2020-05-02 Sat 15:00] =>  6:00
CLOCK: [2020-05-02 Sat 09:00]--[2020-05-02 Sat 15:00] =>  6:00
CLOCK: [2020-04-30 Thu 17:05]--[2020-04-30 Thu 17:23] =>  0:18
:END:

I might also consider trying (but probably later given that I've burnt too much
time on this already), putting ID's into the corpus just in case the data get's
re-arranged during the DTM process, I don't believe this is the case though
because I tested with my own weighting function using /Linear Algebra/, so it's
probably not the issue.

if anybody does want to try that though,
[[https://stackoverflow.com/a/51086240/10593632][here's a /StackOverflow/]] post
detailing how to make a corpus from a dataframe, this would be the logical next
step, see the code in listing [[stc]].



#+NAME: stc
#+CAPTION: How to make a Corpus from a DataFrame Source
#+begin_src R
dd <-data.frame( doc_id=10:13,
    text=c("No wonder, then, that ever gathering
            volume from the mere transit ", "So that in many cases such a panic did he
            finally strike, that few ", "But there were still other and more vital
            practical influences at work", "Not even at the present day has the original
            prestige of the Sperm Whale"),
    stringsAsFactors=F )

Corpus = VCorpus(DataframeSource(dd))
#+end_src

Yeah nah this confiremed that the order was preserved, see issue =#13=.

I also tried with a different metric on the branch =FavouritesCount= branch, no
luck, same issue so I I'm just gonna have to accept that there is no seperation.

*** DONE 17 Comment on the visualisation
:LOGBOOK:
CLOCK: [2020-05-04 Mon 19:12]--[2020-05-04 Mon 19:32] =>  0:20
:END:
[[file:report/report.org::*8.2.17 Comment on the Visualisation][+ Link]]
*** DONE 18 Which Cluster has the highest proportion of above Average Tweets  :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 20:26]--[2020-05-04 Mon 21:26] =>  1:00
:END:
+ [[file:report/report.org::*8.2.18 Cluster with Highest Number Friends][Link]]
*** DONE 19 Display five tweets in clusters that you found in 18              :ryan:
:LOGBOOK:
CLOCK: [2020-05-04 Mon 21:30]--[2020-05-04 Mon 22:17] =>  0:47
:END:
I think we'll use =sample= and take the index from the =pca_data= dataframe.

Check it out I even made the links work in the PDF! :)

*** CODE 20 Find the important themes in high/low friend prop clusters       :ryan:
:LOGBOOK:
CLOCK: [2020-05-05 Tue 12:35]--[2020-05-05 Tue 12:42] =>  0:07
:END:
It appears that the first cluster of tweets is themed around newer games such as /The Division 2/, cluster 2 appears to be focused on games generally and in particular /Rainbow 6/, and finally, cluster 3 appears to be concerned with general discussion.
*** TODO Use a word cloud to display the themes of the clusters               :ryan:
:LOGBOOK:
CLOCK: [2020-05-05 Tue 13:08]--[2020-05-05 Tue 15:05] =>  1:57
:END:
*** TODO Use a dendrogram to display the themes of the clusters in 20         :ryan:
*** TODO What is the conclusion regarding the themes                          :ryan:

** TODO 8.3 Building Networks                                                  :Hassan:Navid:
*** TODO 24 Find the 10 most popular friends
*** TODO 25 Obtain a 2-degree egocentric graph centred at twitter handle
*** TODO 26 Compute the closeness centrality score for each handle graphed
*** TODO 27 List the top 3 most central people
*** TODO 28 Comment on your results
